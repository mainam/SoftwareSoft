#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataAccess.Db
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SELPORTAL")]
	public partial class LogTransferDeviceDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertLogTransferDevice(LogTransferDevice instance);
    partial void UpdateLogTransferDevice(LogTransferDevice instance);
    partial void DeleteLogTransferDevice(LogTransferDevice instance);
    #endregion
		
		public LogTransferDeviceDataContext() : 
				base(global::DataAccess.Properties.Settings.Default.SELPORTALConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LogTransferDeviceDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LogTransferDeviceDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LogTransferDeviceDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LogTransferDeviceDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<LogTransferDevice> LogTransferDevices
		{
			get
			{
				return this.GetTable<LogTransferDevice>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LogTransferDevice")]
	public partial class LogTransferDevice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _IDDevice;
		
		private string _Model;
		
		private string _Tag;
		
		private string _IMEI;
		
		private string _Serial;
		
		private string _Manager;
		
		private string _Borrower;
		
		private string _Keeper;
		
		private string _Type;
		
		private System.DateTime _TransferDate;
		
		private string _StatusDevice;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDDeviceChanging(int value);
    partial void OnIDDeviceChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnTagChanging(string value);
    partial void OnTagChanged();
    partial void OnIMEIChanging(string value);
    partial void OnIMEIChanged();
    partial void OnSerialChanging(string value);
    partial void OnSerialChanged();
    partial void OnManagerChanging(string value);
    partial void OnManagerChanged();
    partial void OnBorrowerChanging(string value);
    partial void OnBorrowerChanged();
    partial void OnKeeperChanging(string value);
    partial void OnKeeperChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnTransferDateChanging(System.DateTime value);
    partial void OnTransferDateChanged();
    partial void OnStatusDeviceChanging(string value);
    partial void OnStatusDeviceChanged();
    #endregion
		
		public LogTransferDevice()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDevice", DbType="Int NOT NULL")]
		public int IDDevice
		{
			get
			{
				return this._IDDevice;
			}
			set
			{
				if ((this._IDDevice != value))
				{
					this.OnIDDeviceChanging(value);
					this.SendPropertyChanging();
					this._IDDevice = value;
					this.SendPropertyChanged("IDDevice");
					this.OnIDDeviceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tag", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Tag
		{
			get
			{
				return this._Tag;
			}
			set
			{
				if ((this._Tag != value))
				{
					this.OnTagChanging(value);
					this.SendPropertyChanging();
					this._Tag = value;
					this.SendPropertyChanged("Tag");
					this.OnTagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IMEI", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string IMEI
		{
			get
			{
				return this._IMEI;
			}
			set
			{
				if ((this._IMEI != value))
				{
					this.OnIMEIChanging(value);
					this.SendPropertyChanging();
					this._IMEI = value;
					this.SendPropertyChanged("IMEI");
					this.OnIMEIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Serial", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Serial
		{
			get
			{
				return this._Serial;
			}
			set
			{
				if ((this._Serial != value))
				{
					this.OnSerialChanging(value);
					this.SendPropertyChanging();
					this._Serial = value;
					this.SendPropertyChanged("Serial");
					this.OnSerialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manager", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Manager
		{
			get
			{
				return this._Manager;
			}
			set
			{
				if ((this._Manager != value))
				{
					this.OnManagerChanging(value);
					this.SendPropertyChanging();
					this._Manager = value;
					this.SendPropertyChanged("Manager");
					this.OnManagerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Borrower", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Borrower
		{
			get
			{
				return this._Borrower;
			}
			set
			{
				if ((this._Borrower != value))
				{
					this.OnBorrowerChanging(value);
					this.SendPropertyChanging();
					this._Borrower = value;
					this.SendPropertyChanged("Borrower");
					this.OnBorrowerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Keeper", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Keeper
		{
			get
			{
				return this._Keeper;
			}
			set
			{
				if ((this._Keeper != value))
				{
					this.OnKeeperChanging(value);
					this.SendPropertyChanging();
					this._Keeper = value;
					this.SendPropertyChanged("Keeper");
					this.OnKeeperChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransferDate", DbType="DateTime NOT NULL")]
		public System.DateTime TransferDate
		{
			get
			{
				return this._TransferDate;
			}
			set
			{
				if ((this._TransferDate != value))
				{
					this.OnTransferDateChanging(value);
					this.SendPropertyChanging();
					this._TransferDate = value;
					this.SendPropertyChanged("TransferDate");
					this.OnTransferDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusDevice", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string StatusDevice
		{
			get
			{
				return this._StatusDevice;
			}
			set
			{
				if ((this._StatusDevice != value))
				{
					this.OnStatusDeviceChanging(value);
					this.SendPropertyChanging();
					this._StatusDevice = value;
					this.SendPropertyChanged("StatusDevice");
					this.OnStatusDeviceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
